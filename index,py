from surprise import Dataset, Reader, SVD
from surprise.model_selection import train_test_split
from surprise.model_selection import cross_validate
from surprise import accuracy
# Load the dataset
data = Dataset.load_builtin('ml-100k')

# Define the rating scale
reader = Reader(line_format='user item rating timestamp', sep='\t')

# Use train_test_split to split the dataset
trainset, testset = train_test_split(data, test_size=0.6, random_state=42)

# Use the SVD algorithm
algo = SVD()

# Train the model
algo.fit(trainset)

# Make predictions on the testset
predictions = algo.test(testset)

# Evaluate the model
accuracy.rmse(predictions)

# Get top N recommendations for a specific user
def get_top_n_recommendations(predictions, user_id, n=10):
    top_n = {}
    for uid, iid, true_r, est, _ in predictions:
        if uid == user_id:
            if uid not in top_n:
                top_n[uid] = []
            top_n[uid].append((iid, est))

    # Sort the predictions for the user and get top n
    top_n[user_id].sort(key=lambda x: x[1], reverse=True)
    return top_n[user_id][:n]

# Get recommendations for a specific user
user_id = str(196)
top_n_recommendations = get_top_n_recommendations(predictions, user_id)
print("Top 10 Recommendations for User", user_id)
for movie_id, estimated_rating in top_n_recommendations:
    print(movie_id, estimated_rating)
